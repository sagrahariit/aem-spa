package com.aarav.wbx.core.allpage.data;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import javax.annotation.PostConstruct;
import javax.inject.Inject;
import javax.inject.Named;

import org.apache.sling.api.resource.Resource;
import org.apache.sling.api.resource.ResourceResolver;
import org.apache.sling.models.annotations.Default;
import org.apache.sling.models.annotations.DefaultInjectionStrategy;
import org.apache.sling.models.annotations.Exporter;
import org.apache.sling.models.annotations.ExporterOption;
import org.apache.sling.models.annotations.Model;

import com.day.cq.wcm.api.Page;

@Model(adaptables=Resource.class, resourceType= {}, defaultInjectionStrategy = DefaultInjectionStrategy.OPTIONAL)
@Exporter(name="jackson", extensions="json", options = {
		@ExporterOption(name = "MapperFeature.SORT_PROPERTIES_ALPHABETICALLY", value = "true"),
		@ExporterOption(name = "SerializationFeature.WRITE_DATES_AS_TIMESTAMPS", value = "false") })
public class PullPageDataJson {

	public static java.util.List<PageBean> links = new ArrayList<PageBean>();
	Resource resource;

	@Inject
	@Named("sling:resourceType")
	@Default(values = "No resourceType")
	protected String resourceType;

	@Inject
	@org.apache.sling.models.annotations.Optional
	private String text;

	@Inject
	@org.apache.sling.models.annotations.Optional
	private String nodePath;

	private String message;

	@Inject
	private Resource res;

	@Inject
	private ResourceResolver resourceResolver;

	@PostConstruct
	protected void init() {
		message = "HI, In Post COnstruct init";
	}
	public List<PageBean> getLinks() {
		resource = resourceResolver.resolve(nodePath);
		links.clear();
		if (resource != null) {
			Iterator<Resource> linkResources = resource.listChildren();
			linkResources.forEachRemaining(res -> populateModel(res));
		}
		return links;
	}
	public void populateModel(Resource resource) {
		PageBean link = new PageBean();
		Page page = resource.adaptTo(Page.class);
		if (page != null) {
			if (page.getTitle() != null) {
				link.setTitle(page.getTitle());
				link.setPath(page.getPath());
			}
			links.add(link);
		}
	}
	public String getMessage() {
		return message;
	}
	public String getText() {
		return text;
	}

}
